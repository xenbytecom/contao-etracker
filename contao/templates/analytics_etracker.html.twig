<!-- indexer::stop -->
<!-- Copyright (c) 2000-2022 etracker GmbH. All rights reserved. -->
<!-- This material may not be reproduced, displayed, modified or distributed -->
<!-- without the express prior written permission of the copyright holder. -->
<!-- etracker tracklet 5.0 -->
<script type="text/javascript" nonce="{{ csp_nonce('script') }}">
    {{ et_params|raw }}
    // var et_tval = 0;
    // var et_tsale = 0;
    // var et_tonr = "";
    // var et_basket = "";

/*    _etrackerOnReady.push(function() {
        // Aufruf des Formulars messen
        let etFormFields = [];
        let etFormErrors = [];
        let etFormObjects = [];

        let getFieldName = (field) => {
            let fieldName = field.placeholder ?? field.name;
            if (typeof field.labels !== 'undefined' && field.labels[0] !== undefined) {
                fieldName = field.labels[0].textContent;
            }
            fieldName = fieldName.trim().replace("Pflichtfeld", "").replace("*", "");
            if (fieldName.trim().length > 40) {
                fieldName = field.name;
            }

            return fieldName.trim();
        };

        let formular = document.querySelector(".dataform:not([method='get'])");
        if (formular !== null) {
            _etracker.sendEvent(new et_UserDefinedEvent(formular.id, 'Formular', 'Formular aufgerufen'));

            for (let i = 0; i < formular.length; i++) {
                let field = formular[i];
                if (field.type == "hidden" || field.type == "submit" || field.type == undefined || field.type == "fieldset" || field.name.startsWith("captcha")) {
                    continue;
                }

                let fieldName = getFieldName(field);

                etFormObjects.push(field);
                etFormFields.push({ 'name': field.labels[0] ?? field.placeholder ?? field.name, 'type': field.type });

                if (field.className.includes(" error")) {
                    etFormErrors.push({ 'name': field.name, 'type': field.type });
                }
            }

            etForm.sendEvent('formFieldsView', formular.id, {
                'sectionName': 'Gesamtformular',
                'sectionFields': etFormFields
            });

            // Fehlerhafte eingaben?
            for (var j = 0; j < etFormErrors.length; j++) {
                etForm.sendEvent('formFieldError', formular.id, {
                    'sectionName': 'Gesamtformular',
                    'sectionField': etFormErrors[j]
                });
            }

            // Interaktion
            etFormObjects.forEach(formField => formField.addEventListener('change', (evt) => {
                let fieldName = getFieldName(evt.target);
                etForm.sendEvent('formFieldInteraction', formular.id, {
                    'sectionName': 'Gesamtformular',
                    'sectionField': { 'name': fieldName, 'type': evt.target.type }
                });
            }));

            // HTML5-Validierungsfehler
            etFormObjects.forEach(formField => formField.addEventListener('invalid', (evt) => {
                let fieldName = getFieldName(evt.target);
                etForm.sendEvent('formFieldError', formular.id, {
                    'sectionName': 'Gesamtformular',
                    'sectionField': { 'name': fieldName, 'type': evt.target.type }
                });
            }));

            // Formular-Absendung (nur, wenn HTML5-Validierung aktiv)
            if(formular.getAttribute("novalidate") == null)
                formular.addEventListener("submit", () => {
                    etForm.sendEvent('formConversion', formular.id);
                    _etracker.sendEvent(new et_UserDefinedEvent(formular.id, 'Formular', 'Formular abgesendet'));
                });
        }
    });

 */

    //_etracker.sendEvent(new et_UserDefinedEvent(evt.target.parentNode.parentNode.querySelector("h3").textContent, 'Startseiten-Link', 'click', 'mehr erfahren'));
</script>
<!--{{ et_script|raw }}-->
<!-- etracker tracklet 5.0 end -->
<!-- indexer::continue -->
